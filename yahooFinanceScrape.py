import csv
import os
from datetime import date, datetime
import yfinance as yf
import pandas as pd
import glob
from RedditScrape import create_data_folder

"""
This program scrapes the current stock price of all the stocks listed in a 
csv file generated by RedditScrape and creates another csv file in directory
StockPrices
"""


def get_current_price(symbol):
    """
    returns the price of the ticker
    :param symbol: string, the name of the stock
    :return: float, the value of the stock
    """
    try:
        ticker = yf.Ticker(symbol)
        todays_data = ticker.history(period='1d')
        return todays_data['Close'][0]
    except:
        return None


def get_current_volume(symbol):
    """
    returns the volume of the stock
    :param symbol: string, the name of the stock
    :return: int, the volume of the stock
    """
    try:
        ticker = yf.Ticker(symbol)
        todays_data = ticker.history(period='1d')
        return todays_data['Volume'][0]
    except:
        return None


def create_name(subdir, name, symb):
    """
    Returns the filepath which the csv file will be saved to
    :param subdir: string, The subdirectory
    :param name: string, the name of the file
    :param symb: boolean, checks if this is for accessing the data file
    :return: string, the path and name of the file
    """
    count = 1
    here = os.path.dirname(os.path.realpath(__file__))
    present = datetime.now()
    pres = present.strftime("%H-%M-%S")
    if symb:
        return os.path.join(here, subdir) + "\\"
    filename = f"{date.today()}-time-{pres}-{name}"
    filepath = os.path.join(here, subdir, filename)
    while os.path.exists(filepath):
        if count == 1:
            filepath = filepath[:filepath.index(".")] + f"({count})" + \
                       filepath[filepath.index("."):len(filepath)]
        else:
            filepath = filepath.replace(f"({count - 1})", f"({count})")
        count += 1
    return filepath


def create_symbols(subdir) -> [str]:
    """
    Returns a list of all the symbols in the most recent file in the directory
    :param subdir: string, the name of the subdirectory
    :return: list, the list of all the symbols
    """
    list_of_files = glob.glob(f'{create_name(subdir, None, True)}*.csv')
    latest_file = max(list_of_files, key=os.path.getctime)
    col_list = ["Stock Name"]
    df = pd.read_csv(latest_file, usecols=col_list)
    list_stock = df[col_list[0]].tolist()
    return list_stock


def create_stock_csv() -> None:
    """
    Creates a .csv with all the data inside the class
    :return: None
    """
    subdir = create_data_folder("StockPrices", "Stonk")
    name = "Stock.csv"
    fold = create_data_folder("ScrapedData", "Scraped")
    filepath = create_name(subdir, name, False)
    with open(filepath, "w", newline="") as file:
        writer = csv.writer(file)
        writer.writerow(
            ["Stock Name", "Price", "Volume"])
        for stk in create_symbols(fold):
            writer.writerow(
                [stk, get_current_price(stk), get_current_volume(stk)])
